{"version":3,"sources":["data/localStorage.js","App.js","index.js"],"names":["LocalStorage","JSON","parse","localStorage","getItem","value","setItem","stringify","citiesList","citiesFile","city","storage","App","useState","readCities","selectedCities","setSelectedCities","inputText","setInputText","selectVisible","setSelectVisible","helpCitiesList","setHelpCitiesList","useEffect","writeCities","deleteButtonHandler","event","buttonId","target","id","filter","_","index","findedCiti","citiName","cities","forEach","c","name","toLowerCase","includes","push","className","onChange","length","onClick","size","selectedText","map","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAAaA,EAAb,qGAEI,OAAOC,KAAKC,MAAMC,aAAaC,QAAQ,qBAF3C,oCAI2B,IAAbC,EAAY,uDAAJ,GAClBF,aAAaG,QAAQ,iBAAkBL,KAAKM,UAAUF,QAL1D,KCKMG,EAAaC,EAAWC,KACxBC,EAAU,IAAIX,EAEL,SAASY,IAAO,IAAD,EACgBC,mBAC1CF,EAAQG,cAAgB,IAFE,mBACrBC,EADqB,KACLC,EADK,OAIMH,mBAAS,IAJf,mBAIrBI,EAJqB,KAIVC,EAJU,OAKcL,oBAAS,GALvB,mBAKrBM,EALqB,KAKNC,EALM,OAMgBP,mBAAS,IANzB,mBAMrBQ,EANqB,KAMLC,EANK,KAQ5BC,qBAAU,WACRZ,EAAQa,YAAR,YAAwBT,OAG1B,IAmBMU,EAAsB,SAACC,GAC3B,IAAMC,GAAYD,EAAME,OAAOC,GAC/Bb,EAAkBD,EAAee,QAAO,SAACC,EAAGC,GAAJ,OAAcA,IAAUL,OAQ5DM,EAAa,SAACC,GAClB,IAAIC,EAAS,GAMb,OALA3B,EAAW4B,SAAQ,SAACC,GACdA,EAAEC,KAAKC,cAAcC,SAASN,EAASK,gBACzCJ,EAAOM,KAAKJ,EAAEC,SAGXH,GAGT,OACE,yBAAKO,UAAU,aACb,+GACA,6BACE,2BACEA,UAAU,QACVC,SArCmB,SAACjB,GAC1B,IAAMT,EAAYS,EAAME,OAAOvB,MAC/Ba,EAAaD,GACTA,EAAU2B,QAAU,GACtBxB,GAAiB,GACjBE,EAAkBW,EAAWhB,KAE7BG,GAAiB,IA+Bbf,MAAOY,IAET,4BAAQ4B,QAhDW,WACnB5B,GAAagB,EAAWhB,GAAWuB,SAASvB,KAC9CD,EAAkB,GAAD,mBAAKD,GAAL,CAAqBE,KACtCC,EAAa,IACbE,GAAiB,MA4Cf,qDAEDD,EACC,4BACEuB,UAAU,SACVb,GAAG,OACHS,KAAK,OACLQ,KAAK,IACLH,SAhCoB,SAACjB,GAC3B,IAAMqB,EAAerB,EAAME,OAAOvB,MAClCa,EAAa6B,KAgCN1B,EAAe2B,KAAI,SAACX,EAAGL,GAAJ,OAClB,4BAAQ3B,MAAOgC,EAAGY,IAAKjB,GACpBK,OAIL,KAEJ,6BACE,4BACGtB,EAAeiC,KAAI,SAACX,EAAGL,GACtB,OACE,wBAAIH,GAAIG,EAAOiB,IAAKjB,GACjBK,EACD,4BACER,GAAIG,EACJa,QAASpB,EACTiB,UAAU,gBAHZ,YCvFhBQ,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACxC,EAAD,OAEFyC,SAASC,eAAe,U","file":"static/js/main.3ee8fe80.chunk.js","sourcesContent":["export class LocalStorage {\r\n  readCities() {\r\n    return JSON.parse(localStorage.getItem(\"selectedCities\"));\r\n  }\r\n  writeCities(value = []) {\r\n    localStorage.setItem(\"selectedCities\", JSON.stringify(value));\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport citiesFile from \"./data/cities.json\";\r\nimport { LocalStorage } from \"./data/localStorage\";\r\n\r\nconst citiesList = citiesFile.city;\r\nconst storage = new LocalStorage();\r\n\r\nexport default function App() {\r\n  const [selectedCities, setSelectedCities] = useState(\r\n    storage.readCities() || []\r\n  );\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const [selectVisible, setSelectVisible] = useState(false);\r\n  const [helpCitiesList, setHelpCitiesList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    storage.writeCities([...selectedCities]);\r\n  });\r\n\r\n  const addButtonHandler = () => {\r\n    if (inputText && findedCiti(inputText).includes(inputText)) {\r\n      setSelectedCities([...selectedCities, inputText]);\r\n      setInputText(\"\");\r\n      setSelectVisible(false);\r\n    }\r\n  };\r\n\r\n  const inputChangeHandler = (event) => {\r\n    const inputText = event.target.value;\r\n    setInputText(inputText);\r\n    if (inputText.length >= 3) {\r\n      setSelectVisible(true);\r\n      setHelpCitiesList(findedCiti(inputText));\r\n    } else {\r\n      setSelectVisible(false);\r\n    }\r\n  };\r\n\r\n  const deleteButtonHandler = (event) => {\r\n    const buttonId = +event.target.id;\r\n    setSelectedCities(selectedCities.filter((_, index) => index !== buttonId));\r\n  };\r\n\r\n  const selectChangeHandler = (event) => {\r\n    const selectedText = event.target.value;\r\n    setInputText(selectedText);\r\n  };\r\n\r\n  const findedCiti = (citiName) => {\r\n    let cities = [];\r\n    citiesList.forEach((c) => {\r\n      if (c.name.toLowerCase().includes(citiName.toLowerCase())) {\r\n        cities.push(c.name);\r\n      }\r\n    });\r\n    return cities;\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Список городов</h1>\r\n      <div>\r\n        <input\r\n          className=\"input\"\r\n          onChange={inputChangeHandler}\r\n          value={inputText}\r\n        />\r\n        <button onClick={addButtonHandler}>Добавить</button>\r\n      </div>\r\n      {selectVisible ? (\r\n        <select\r\n          className=\"select\"\r\n          id=\"cars\"\r\n          name=\"cars\"\r\n          size=\"3\"\r\n          onChange={selectChangeHandler}\r\n        >\r\n          {helpCitiesList.map((c, index) => (\r\n            <option value={c} key={index}>\r\n              {c}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      ) : null}\r\n\r\n      <div>\r\n        <ul>\r\n          {selectedCities.map((c, index) => {\r\n            return (\r\n              <li id={index} key={index}>\r\n                {c}\r\n                <button\r\n                  id={index}\r\n                  onClick={deleteButtonHandler}\r\n                  className=\"deleteButton\"\r\n                >\r\n                  X\r\n                </button>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}